/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PrintOptions.java
 *
 * Created on Jan 23, 2010, 9:14:52 PM
 */

package lu.fisch.unimozer.dialogs;

import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import lu.fisch.unimozer.Ini;
import lu.fisch.unimozer.MyError;
import lu.fisch.unimozer.Unimozer;

/**
 *
 * @author robertfisch
 */
public class PrintOptions extends javax.swing.JDialog implements KeyListener
{
    public static final int JOB_PREVIEW = 0;
    public static final int JOB_PRINT = 1;


    public boolean OK = false;
    private int job = JOB_PREVIEW;

    public static PrintOptions showModal(Frame frame, String title)
    {
        PrintOptions ce = new PrintOptions(frame, title, true);

        try
        {
            Ini ini = Ini.getInstance();
            ini.load();
            ce.chkCode.setSelected(ini.getProperty("printCode", "true").equals("true"));
            ce.chkDiagram.setSelected(ini.getProperty("printDiagram", "true").equals("true"));
            ce.chkJavaDoc.setSelected(ini.getProperty("printFilterJavaDoc", "false").equals("true"));
            ce.chkDoubleLines.setSelected(ini.getProperty("printFilterDoubleLines", "true").equals("true"));
            ce.speFontSize.setValue(ini.getProperty("printFontSize", "10"));
        }
        catch (FileNotFoundException ex)
        {
            ex.printStackTrace();
        }
        catch (IOException ex)
        {
            ex.printStackTrace();
        }

        ce.setLocationRelativeTo(frame);
        ce.setVisible(true);
        return ce;
    }

    public PrintOptions(Frame frame, String title, boolean modal)
    {
        super(frame,title, modal);
        initComponents();

        // add keyListeners to components!
        chkDiagram.addKeyListener(this);
        chkCode.addKeyListener(this);
        chkDoubleLines.addKeyListener(this);
        chkJavaDoc.addKeyListener(this);
        speFontSize.addKeyListener(this);
        btnOK.addKeyListener(this);
        btnCancel.addKeyListener(this);
        this.addKeyListener(this);

        Unimozer.switchButtons(btnOK, btnCancel);
        this.pack();
    }

    /** Creates new form PrintOptions */
    public PrintOptions() {
        initComponents();
        Unimozer.switchButtons(btnOK, btnCancel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chkDiagram = new javax.swing.JCheckBox();
        chkJavaDoc = new javax.swing.JCheckBox();
        chkCode = new javax.swing.JCheckBox();
        btnCancel = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();
        chkDoubleLines = new javax.swing.JCheckBox();
        speFontSize = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        btnPreview = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Print options");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        chkDiagram.setSelected(true);
        chkDiagram.setText("Diagram");
        chkDiagram.setNextFocusableComponent(chkCode);

        chkJavaDoc.setText("Filter JavaDoc comments?");
        chkJavaDoc.setNextFocusableComponent(chkDoubleLines);

        chkCode.setSelected(true);
        chkCode.setText("Code");
        chkCode.setNextFocusableComponent(chkJavaDoc);

        btnCancel.setText("Cancel");
        btnCancel.setNextFocusableComponent(btnOK);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOK.setText("Print");
        btnOK.setActionCommand("Print");
        btnOK.setNextFocusableComponent(chkDiagram);
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        chkDoubleLines.setText("Filter double blank lines?");
        chkDoubleLines.setNextFocusableComponent(speFontSize);
        chkDoubleLines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDoubleLinesActionPerformed(evt);
            }
        });

        speFontSize.setModel(new javax.swing.SpinnerListModel(new String[] {"8", "9", "10", "11", "12"}));

        jLabel1.setText("Font size");
        jLabel1.setNextFocusableComponent(btnCancel);

        btnPreview.setText("Preview");
        btnPreview.setNextFocusableComponent(chkDiagram);
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(chkDiagram)
                    .add(chkCode)
                    .add(layout.createSequentialGroup()
                        .add(29, 29, 29)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(chkDoubleLines)
                            .add(chkJavaDoc)
                            .add(layout.createSequentialGroup()
                                .add(speFontSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(16, 16, 16)
                                        .add(btnPreview)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(btnOK, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jLabel1))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(btnCancel))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(chkDiagram)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(chkCode)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(chkJavaDoc)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(chkDoubleLines)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(speFontSize))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnCancel)
                    .add(btnOK)
                    .add(btnPreview))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnOKActionPerformed
    {//GEN-HEADEREND:event_btnOKActionPerformed
        OK=true;
        setVisible(false);
        setJob(JOB_PRINT);

        try
        {
            Ini ini = Ini.getInstance();
            ini.load();
            ini.setProperty("printCode",    Boolean.toString(printCode()));
            ini.setProperty("printDiagram", Boolean.toString(printDiagram()));
            ini.setProperty("printFilterJavaDoc", Boolean.toString(chkJavaDoc.isSelected()));
            ini.setProperty("printFilterDoubleLines", Boolean.toString(chkDoubleLines.isSelected()));
            ini.setProperty("printFontSize", (String) speFontSize.getValue());
            ini.save();
        }
        catch (FileNotFoundException ex)
        {
            MyError.display(ex);
        }
        catch (IOException ex)
        {
            MyError.display(ex);
        }

    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelActionPerformed
    {//GEN-HEADEREND:event_btnCancelActionPerformed
        OK=false;
        setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_formKeyPressed
    {//GEN-HEADEREND:event_formKeyPressed
        keyPressed(evt);
    }//GEN-LAST:event_formKeyPressed

    private void chkDoubleLinesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_chkDoubleLinesActionPerformed
    {//GEN-HEADEREND:event_chkDoubleLinesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkDoubleLinesActionPerformed

    private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnPreviewActionPerformed
    {//GEN-HEADEREND:event_btnPreviewActionPerformed
        OK=true;
        setVisible(false);

        try
        {
            Ini ini = Ini.getInstance();
            ini.load();
            ini.setProperty("printCode",    Boolean.toString(printCode()));
            ini.setProperty("printDiagram", Boolean.toString(printDiagram()));
            ini.setProperty("printFilterJavaDoc", Boolean.toString(chkJavaDoc.isSelected()));
            ini.setProperty("printFilterDoubleLines", Boolean.toString(chkDoubleLines.isSelected()));
            ini.setProperty("printFontSize", (String) speFontSize.getValue());
            ini.save();
        }
        catch (FileNotFoundException ex)
        {
            MyError.display(ex);
        }
        catch (IOException ex)
        {
            MyError.display(ex);
        }
    }//GEN-LAST:event_btnPreviewActionPerformed

    public boolean printDiagram()
    {
        return chkDiagram.isSelected();
    }

    public boolean printCode()
    {
        return chkCode.isSelected();
    }

    public boolean printJavaDoc()
    {
        return !chkJavaDoc.isSelected();
    }

    public boolean filterDoubleLines()
    {
        return chkDoubleLines.isSelected();
    }

    public int getFontSize()
    {
        return Integer.valueOf((String) speFontSize.getValue());
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrintOptions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnPreview;
    private javax.swing.JCheckBox chkCode;
    private javax.swing.JCheckBox chkDiagram;
    private javax.swing.JCheckBox chkDoubleLines;
    private javax.swing.JCheckBox chkJavaDoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSpinner speFontSize;
    // End of variables declaration//GEN-END:variables

    public void keyTyped(KeyEvent e)
    {
    }

    @Override
    public void keyPressed(KeyEvent e)
    {
        if(e.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
                OK=false;
                setVisible(false);
        }
        else if(e.getKeyCode() == KeyEvent.VK_ENTER)
        {
                btnOKActionPerformed(null);
        }

    }

    @Override
    public void keyReleased(KeyEvent e)
    {
    }

    /**
     * @return the JOB
     */
    public int getJob()
    {
        return job;
    }

    /**
     * @param JOB the JOB to set
     */
    public void setJob(int JOB)
    {
        this.job = JOB;
    }

}
